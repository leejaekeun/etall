package labs.etall.net{	import flash.events.Event;	import flash.net.URLRequest;	import flash.events.IOErrorEvent;	import flash.events.ProgressEvent;	import flash.events.EventDispatcher;	import flash.events.HTTPStatusEvent;	import flash.events.SecurityErrorEvent;	import flash.net.URLLoader;	public class  XMLLoader extends EventDispatcher{		private var xmlData:XML;		public function XMLLoader(urlStr:String):void{			var loader:URLLoader=new URLLoader();			loader.addEventListener(ProgressEvent.PROGRESS,xmlHandler);			loader.addEventListener(Event.COMPLETE,xmlHandler);			loader.addEventListener(IOErrorEvent.IO_ERROR,xmlHandler);			loader.addEventListener(HTTPStatusEvent.HTTP_STATUS,xmlHandler);			loader.addEventListener(SecurityErrorEvent.SECURITY_ERROR,xmlHandler);			trace("xml路径",urlStr);			loader.load(new URLRequest(urlStr));		}		private function xmlHandler(e:Event):void{			switch(e.type){				case Event.COMPLETE:					xmlData=new XML(e.target.data);					//trace("COMPLETE");					dispatchEvent(new Event(Event.COMPLETE));					break;				case IOErrorEvent.IO_ERROR:					trace("文件不存在");					dispatchEvent(new Event(IOErrorEvent.IO_ERROR));					break;				case ProgressEvent.PROGRESS:					//trace("加载进度",int(e.target.bytesLoaded/e.target.bytesTotal)*100+"%");					break;				case HTTPStatusEvent.HTTP_STATUS:					//trace("HTTPSTATUS:"+e);										break;				case SecurityErrorEvent.SECURITY_ERROR:					//trace("跨域安全问题");					//dispatchEvent(new Event(SecurityErrorEvent.SECURITY_ERROR));					break;			}		}		public function  get Value():XML{			return(xmlData);		}	}}